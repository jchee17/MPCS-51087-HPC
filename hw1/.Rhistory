plot1 = read.table("./plot1.csv", sep=",", header=T)
plot1
plot2 = read.table("./plot2.csv", sep=",", header=T)
plot2
plot3 = read.table("./plot3.csv", sep=",", header=T)
plot3
library(ggplot2)
qplot(data=plot1)
quit()
plot2
png(filename="./plot1.png", bg="white")
plot(plot2$bs, plot2$blocking, type="o", col="blue")
title(main="(2) Matrix Multiplication Times for size 2048 Matrix, Variable Block Size")
title(main="(2) Blocking Matrix Multiplication Times for size 2048 Matrix, Variable Block Size")
title(xlab="block size")
title(ylab="Blocking Matrix Multiplication Time")
title(xlab="Block Size")
dev.off()
plot1
png(filename="./plot1.png", bg="white")
plot(plot1$n, plot1$naive, type="o", col="blue", xlim=c(0,2200), ylim=c(0,80),xlab='', ylab='')
lines(plot1$n, plot1$blocking, type="o", pch=22, lty=2, col="red")
lines(plot1$n, plot1$recursive, type="o", pch=24, lty=3, col="green")
lines(plot1$n, plot1$BLAS, type="o", pch=25, lty=4, col="purple")
title(main="(1) Matrix Multiplication Timing for Varying Matrix Sizes n")
title(xlab="Matrix Size (nxn)")
title(ylab="Matrix Multiplication Time")
legend("topleft", c("naive", "blocking", "recursive", "BLAS"), col=c("blue", "red", "green", "purple"), pch=c(21,22,24,25), lty=c(1,2,3,4))
dev.off()
plot(plot2$bs, plot2$blocking, type="o", col="blue")
title(main="(2) Blocking Matrix Multiplication Times for size 2048 Matrix, Variable Block Size")
title(main='')
plot(plot2$bs, plot2$blocking, type="o", col="blue")
title(main="(2) Blocking MMX Times for size 2048 Matrix, Variable Block Size")
title(xlab="Block Size")
title(ylab="Blocking Matrix Multiplication Time")
plot(plot2$bs, plot2$blocking, type="o", col="blue", xlab='', ylab='')
plot(plot2$bs, plot2$blocking, type="o", col="blue", xlab='', ylab='')
title(main="(2) Blocking Matrix Multiplication Times for size 2048 Matrix, Variable Block Size")
plot(plot2$bs, plot2$blocking, type="o", col="blue", xlab='', ylab='')
title(main="(2) Blocking MMX Times for size 2048 Matrix, Variable Block Size")
title(xlab="Block Size")
title(ylab="Blocking Matrix Multiplication Time")
title(ylab="Blocking Matrix Multiplication Time (s)")
png(filename="./plot2.png", bg="white")
plot(plot2$bs, plot2$blocking, type="o", col="blue", xlab='', ylab='')
title(main="(2) Blocking MMX Times for size 2048 Matrix, Variable Block Size")
title(xlab="Block Size")
title(ylab="Blocking Matrix Multiplication Time (s)")
dev.off()
plot3
png(filename="./plot3.png", bg="white")
plot(plot3$bs, plot3$recursive, type="o", col="blue", xlab='', ylab='')
title(main="(3) Recursive MMX Times size 2048 Matrix, Varaible Min Problem Size")
title(xlab="Minimum Problem Size")
title(ylab="Recursive Matrix Multiplication Time (s)")
dev.off()
png(filename="./plot1.png", bg="white")
plot(plot1$n, plot1$naive, type="o", col="blue", xlim=c(0,2200), ylim=c(0,80),xlab='', ylab='')
> lines(plot1$n, plot1$blocking, type="o", pch=22, lty=2, col="red")
> lines(plot1$n, plot1$recursive, type="o", pch=24, lty=3, col="green")
> lines(plot1$n, plot1$BLAS, type="o", pch=25, lty=4, col="purple")
> title(main="(1) Matrix Multiplication Timing for Varying Matrix Sizes n")
> title(xlab="Matrix Size (nxn)")
> title(ylab="Matrix Multiplication Time")
> legend("topleft", c("naive", "blocking", "recursive", "BLAS"), col=c("blue", "red", "green", "purple"), pch=c(21,22,24,25), lty=c(1,2,3,4))
png(filename="./plot1.png", bg="white")
plot(plot1$n, plot1$naive, type="o", col="blue", xlim=c(0,2200), ylim=c(0,80),xlab='', ylab='')
lines(plot1$n, plot1$blocking, type="o", pch=22, lty=2, col="red")
lines(plot1$n, plot1$recursive, type="o", pch=24, lty=3, col="green")
lines(plot1$n, plot1$BLAS, type="o", pch=25, lty=4, col="purple")
title(main="(1) Matrix Multiplication Timing for Varying Matrix Sizes n")
title(xlab="Matrix Size (nxn)")
title(ylab="Matrix Multiplication Time (s)")
legend("topleft", c("naive", "blocking", "recursive", "BLAS"), col=c("blue", "red", "green", "purple"), pch=c(21,22,24,25), lty=c(1,2,3,4))
dev.off()
quit()
plot2 = read.table("./p2.csv", header=T, sep=",")
plot2
plot(plot2$n, plot2$time, type="o", xlab='', ylab='')
plot(log=plot2$n, plot2$time, type="o", xlab='', ylab='')
plot(log="plot2$n", plot2$time, type="o", xlab='', ylab='')
plot(log=plot2$n, plot2$time, type="o", xlab='', ylab='')
plot(plot2$n, plot2$time, type="o", xlab='', ylab='')
plot(plot2$n, plot2$time, type="o", xlab='', ylab='', log="xy")
plot(plot2$n, plot2$time, type="o", xlab='', ylab='', log="x")
plot(plot2$n, plot2$time, type="o", xlab='', ylab='', log="")
plot(plot2$n, plot2$time, type="o", xlab='', ylab='', log="xy")
plot(plot2$n, plot2$time, type="o", xlab='', ylab='', log="xy", col="blue")
plot(plot2$n, plot2$time, type="o", xlab='', ylab='', log="y", col="blue")
plot(plot2$n, plot2$time, type="o", xlab='', ylab='', log="x", col="blue")
plot(plot2$n, plot2$time, type="o", xlab='', ylab='', log="xy", col="blue")
plot(plot2$n, plot2$time, type="o", xlab='', ylab='', log="x", col="blue")
plot(plot2$n, plot2$time, type="o", xlab='', ylab='', log="xy", col="blue")
title(main="High q Function Timing")
title(xlab="log Function Input Size")
title(ylab="log Time (s)")
png(filename="problem2.png")
png(filename="problem2.png", bg="white")
plot(plot2$n, plot2$time, type="o", xlab='', ylab='', log="xy", col="blue")
title(main="High q Function Timing")
title(xlab="log Function Input Size")
title(ylab="log Time (s)")
dev.off()
quit
quit()
plot2 = read.table("p2.csv", sep=",", header=T)
plot2
plot(plot2)
plot(plot2, log="x")
quit()
